@page
@model woodgrove_portal.Pages.OnboardingModel
@{
    ViewData["Title"] = "Employee onboarding";
}

<link rel="stylesheet" href="~/css/bs-stepper.min.css">
<!----- Load the QR code library------->
<script src="/js/qrcode.min.js"></script>

<!--- Font ---->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@500&display=swap" rel="stylesheet">

<h1>Create your account</h1>

@if (!string.IsNullOrEmpty(Model.Error))
{
    <div id="errorArea" class="alert alert-danger" style="margin-top: 25px;" role="alert">
        <h4>Error</h4>
        <p>@Model.Error</p>
    </div>
}
else
{
    <!-------Error section -------->
    <div id="errorArea" class="alert alert-danger" style="margin-top: 25px; display: none;" role="alert">
        <h4 class="alert-heading">Error</h4>
        <p id="errorUserMessage"></p>

        <a class="link-danger" data-bs-toggle="collapse" href="#errorMessage" role="button" aria-expanded="false"
            aria-controls="errorMessage">
            Show more
        </a>
        <p class="collapse" id="errorMessage"></p>
    </div>


    <div class="" style="margin-top: 50px;">
        <div class="bs-stepper vertical border border-warning border-1"
            style="border-radius: 20px; background-color: rgb(226, 226, 226); padding-top: 35px">
            <div class="bs-stepper-header" role="tablist">
                <!-- your steps here -->
                <div class="step" data-target="#intro-part">
                    <button type="button" class="step-trigger" role="tab" aria-controls="intro-part"
                        id="intro-part-trigger">
                        <span class="bs-stepper-circle"><i class="bi bi-info-lg"></i></span>
                        <span class="bs-stepper-label">Welcome</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#qrcode-part">
                    <button type="button" class="step-trigger" role="tab" aria-controls="qrcode-part"
                        id="qrcode-part-trigger">
                        <span class="bs-stepper-circle"><i class="bi bi-qr-code"></i></span>
                        <span class="bs-stepper-label">Scan the QR code</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#userAction-part">
                    <button type="button" class="step-trigger" role="tab" aria-controls="userAction-part"
                        id="userAction-part-trigger">
                        <span class="bs-stepper-circle"><i class="bi bi-person-lock"></i></span>
                        <span class="bs-stepper-label">Share the card</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#completed-part">
                    <button type="button" class="step-trigger" role="tab" aria-controls="completed-part"
                        id="completed-part-trigger">
                        <span class="bs-stepper-circle"><i class="bi bi-check2-all"></i></span>
                        <span class="bs-stepper-label">Completed</span>
                    </button>
                </div>
            </div>
            <div class="bs-stepper-content position-relative" style="width: 100%;">
                <!-- Introdction step -->
                <div id="intro-part" class="content fs-5" role="tabpanel" aria-labelledby="intro-part-trigger">
                    <div class="row">
                        <div class="col">
                            <h3>Welcome @Model.DisplayName</h3>
                            <p class="py-1">
                                Congratulations on your new role! To activate your employee account you need to
                                identify
                                yourself with a <b>TrueID</b> card. The TrueID is fictitious identity verification provider
                                we
                                partnership
                                to verify our new hires identity. You can also identify yourself with one of <a
                                    href="https://learn.microsoft.com/entra/verified-id/partner-gallery"
                                    class="link link-secondary" target="_blank">Microsoft Entra Verified ID IDV partners</a>
                                cards.
                                <br>
                            </p>

                            <img style="height: 200px;" class="py-2" alt="An example of TrueID card"
                                src="https://woodgroveemployee.azurewebsites.net/assets/images/verification/true-id-card.png" />

                        </div>
                    </div>

                    <div class="row py-4">
                        <div class="col">

                            <i class="bi bi-question-circle-fill fs-3" style="color: green;"></i> Do not have a TrueID
                            card? click <a href="https://trueidentityinc.azurewebsites.net/" class="link-success">here</a>
                            to get one.

                        </div>
                        <div class="col-4">

                            <button class="btn btn-warning" onclick="startPresentation();">
                                <span id="startDemoSpinner" style="display: none;" class="spinner-border spinner-border-sm"
                                    role="status" aria-hidden="true"></span> Activate your employee account</button>

                        </div>
                    </div>
                </div>

                <div id="qrcode-part" class="content fs-5" role="tabpanel" aria-labelledby="qrcode-part-trigger">

                    <div class="row">
                        <div class="col">
                            <h3>Scan the QR code</h3>
                            <p class="py-1">
                                Scan the QR code with your mobile phone.
                            </p>
                            <div class="">
                                <div id="qrcode" class="align-self-center" style="display: inline-block;"></div>
                            </div>


                            <p class="fs-6" style="margin-top: 15px;">
                                Run this demo on a
                                mobile device?
                                use <a id="targetUrl" class="link-primary" href=""> this
                                    link</a>!
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col"><button class="btn btn-secondary" onclick="stepper.previous()">Back</button>
                        </div>
                    </div>
                </div>

                <div id="userAction-part" class="content fs-5" role="tabpanel" aria-labelledby="userAction-part-trigger">
                    <h3>Share the TrueID card with us</h3>
                    <p class="py-1">
                        In the Microsoft Authenticator review the presentation request and share the TrueID card with us.
                    </p>

                    <div class="text-center">
                        <div class="spinner-border" style="color: orange;" role="status">
                            <span class="sr-only"></span>
                        </div>
                    </div>
                </div>

                <div id="completed-part" class="content fs-3" role="tabpanel"
                    aria-labelledby="completed-part-trigger">

                    <h3>Activating your account</h3>
                    <p class="py-1">

                        Congratulations <span id="valueToPresent"></span>, your identity successfully
                        verified.
                        <span id="preparing">We are preparing your account, please wait (it usually takes less than a
                            minute).</span>
                    <p>
                    <div class="text-center fs-1" style="margin-top: 20px;" id="spinner">
                        <div class="spinner-border text-secondary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                    <div id="tapContainer" style="display: none; margin-top: 20px;" class="fs-5">

                        Your account is ready. Please follow these steps:
                        <ol>
                            <li><a href='https://aka.ms/sspr' target="_blank" class="link">Reset your password</a>. On the
                                password reset page use the
                                following access pass <span style="background-color: #ebebeb;" id="tap"></span>
                            </li>
                            <li>Go to <a href='https://www.microsoft365.com' target="_blank" class="link">M365 portal</a>
                                and upload a photo of yourself.
                            </li>
                            <li>In <a href='https://myaccount.microsoft.com' target="_blank" class="link">MyAccount</a>,
                                issue yourself a
                                VerifiedEmployee Verified ID credential.</li>
                            <li>Go to <a href='https://myapplications.microsoft.com' target="_blank"
                                    class="link">MyApplications</a> to find applications
                                to use.</li>
                            <ol>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Technical details section-->
    <p style="margin-top: 400px;">
        <a class="link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover"
            data-bs-toggle="collapse" href="#collapseTechnicalDetails" role="button" aria-expanded="false"
            aria-controls="collapseTechnicalDetails">
            Show technical details
        </a>
    </p>

    <div class="collapse" id="collapseTechnicalDetails">
        <div class="card card-body">
            <h2>Request</h2>
            <div id="requestPayload">Waiting...</div>

            <h2 style="margin-top: 50px;">Response</h2>
            <div id="responseBody">Waiting...</div>

            <h2 style="margin-top: 50px;">Notifications</h2>
            <div id="CallbackJsonPayload">Waiting...</div>

            <h2 style="margin-top: 50px;">Claims</h2>
            <div id="content">Waiting...</div>
        </div>
    </div>

}

@section Scripts
{
    @if (string.IsNullOrEmpty(Model.Error))
    {
        <!-- https://github.com/Johann-S/bs-stepper -->
        <script src="https://cdn.jsdelivr.net/npm/bs-stepper/dist/js/bs-stepper.min.js"></script>

        <script>
            var stepper;

            $(document).ready(function () {

                stepper = new Stepper($('.bs-stepper')[0]);

            })

            // Call the demo Woodgrove demo issuance RSET API 
            function startPresentation() {

                // Show the spinner
                $("#startDemoSpinner").show();
                $("#errorArea").hide();

                // Get the JWT token
                var urlParams = new URLSearchParams(window.location.search);
                token = urlParams.get('token')

                // Call the Woodgrove demo API
                $.ajax({
                    type: 'Get',
                    url: '/api/Present?token=' + token,
                    success: function (data) {
                        handleApiResponse(data);
                    }
                });
            }

            function handleApiResponse(data) {

                // Render the HTTP request and response
                $("#requestContent").show();
                $("#requestPayload").html(data.requestPayload);
                $("#responseBody").html(data.responseBody);

                // Stop the spinner
                $("#startDemoSpinner").hide();

                if (data.errorMessage != "") {
                    // Show the error message
                    if (data.errorUserMessage = "") {
                        $("#errorUserMessage").html(data.errorMessage);
                    }
                    else {
                        $("#errorUserMessage").html(data.errorUserMessage);
                        $("#errorMessage").html(data.errorMessage);
                    }

                    $("#errorArea").show();
                }
                else {
                    // No error, initiate the QR code
                    $("#qrcode").html("") //Clear it first 

                    $("#targetUrl").attr("href", data.qrCodeUrl);
                    var qrcode = new QRCode("qrcode", { width: 250, height: 250 });
                    qrcode.makeCode(data.qrCodeUrl);

                    // Render the PIN code (if exists)
                    if ($("#pinCode").length > 0) {
                        $("#pinCode").html(data.pinCode);
                    }

                    // Move to the next step
                    stepper.next();

                    // Start to check the callback endpoint status
                    startStatusIntervals();
                }
            }

            function startStatusIntervals() {
                statusInterval = setInterval(checkStatus, 2000);
            }
        </script>

        <script>
            var statusInterval = 0;
            var waitForUserAction = false;
            var completed = false;
            var lastID = "";

            function checkStatus() {
                $.get("/api/status", function (data) {

                    if (lastID === data.id) {
                        return;
                    }

                    // Update the last ID
                    lastID = data.id;

                    // Log the data to the console
                    console.log(data);

                    // Show the raw data return to the call back endpoint
                    if (data.history) {
                        var html = "";
                        for (const element of data.history) {
                            html += '<h4>' + element.message + '</h4><p>' + element.timing + "</p><code  style='margin-bottom: 25px; display: block;'>" + element.payload + "</code>";
                        }

                        $("#CallbackJsonPayload").html(html)
                    }

                    // Show the timing
                    //$("#Timing").html(data.timing.toString().replace(/,/g, '<br>'));

                    // Stop the interval and take the user to the presentation page
                    if (data.requestStatus == "issuance_successful") {

                        window.clearInterval(statusInterval);

                        // Show the complete step
                        if (typeof stepper !== 'undefined' && completed == false) {
                            completed = true;
                            stepper.next();
                        }
                    }

                    else if (data.requestStatus == "request_retrieved") {
                        // The QR code was successfully scanned
                        if (typeof stepper !== 'undefined' && waitForUserAction == false) {
                            waitForUserAction = true;
                            stepper.next();
                        }
                    }

                    else if (data.requestStatus == "issuance_error") {
                        // There was an error issuing the credential 
                        window.clearInterval(statusInterval);

                        var jsonPayload = JSON.parse(data.jsonPayload);

                        // Show the error message
                        $("#errorUserMessage").html(jsonPayload.error.message);
                        $("#errorMessage").html(jsonPayload.error.code);
                        $("#errorArea").show();
                    }

                    else if (data.requestStatus == "presentation_verified") {
                        window.clearInterval(statusInterval);

                        getTap();

                        // Show the complete step
                        if (typeof stepper !== 'undefined' && completed == false) {
                            completed = true;
                            stepper.next();
                        }

                        // Instead of showing the next step, call the complete function on the page
                        if ($("#completFunction").length > 0) {
                            completFunction();
                        }

                        // Show the claims
                        var jsonPayload = JSON.parse(data.jsonPayload);
                        var html = `<table class="table table-hover">
                                                                                                                    <thead>
                                                                                                                    <tr>
                                                                                                                        <th>Claim</th>
                                                                                                                        <th>Value</th>
                                                                                                                        <th>Type</th>
                                                                                                                        <th>Issuer</th>
                                                                                                                    </tr>
                                                                                                                    </thead><tbody>`

                        if (jsonPayload && jsonPayload.verifiedCredentialsData && jsonPayload.verifiedCredentialsData.length > 0) {

                            for (let vc = 0; vc < jsonPayload.verifiedCredentialsData.length; vc++) {

                                // Get the VC types
                                var VcType = jsonPayload.verifiedCredentialsData[vc].type.toString().replace(',', ', ');

                                // Iterate through the claims
                                Object.keys(jsonPayload.verifiedCredentialsData[vc].claims).forEach(function (key) {

                                    var style = "";
                                    if (jsonPayload.verifiedCredentialsData[vc].claims[key].length > 70) {
                                        // Prevent page scrolling for large texts
                                        style = " style='overflow: auto; display: inline-block; max-width: 400px;'"
                                    }

                                    html += "<tr><td>" + key + "</td><td " + style + ">" + jsonPayload.verifiedCredentialsData[vc].claims[key] + "</td><td>" + VcType + "</td>" + "</td><td>" + jsonPayload.verifiedCredentialsData[vc].domainValidation.url + "</td></tr>";

                                    if (key == 'name' || key == 'firstName' || key == 'displayName') {
                                        // Show the fisrt name or display name
                                        if ($("#valueToPresent").length > 0) {
                                            $("#valueToPresent").html(jsonPayload.verifiedCredentialsData[vc].claims[key]);
                                        }
                                    }
                                    else if (key == 'id') {
                                        // Show other important claim, for example the card ID
                                        if ($("#secondValueToPresent").length > 0) {
                                            $("#secondValueToPresent").html(jsonPayload.verifiedCredentialsData[vc].claims[key]);
                                        }
                                    }
                                })
                            }

                            html += "</tbody></table>";
                            $("#content").html(html)
                            $("#contentContainer").show();
                        }
                    }
                    else if (data.requestStatus == "presentation_error") {
                        // There was an error presenting the credential 
                        window.clearInterval(statusInterval);

                        var jsonPayload = JSON.parse(data.jsonPayload);

                        // Show the error message
                        $("#errorUserMessage").html(jsonPayload.error.message);
                        $("#errorMessage").html(jsonPayload.error.code);
                        $("#errorArea").show();

                        if (jsonPayload.error.message.includes("is revoked")) {
                            // Show a user friendly error that the credential was revoked
                            $("#presentationCompleted").hide();
                            $("#credentialIsRevoked").show();
                            stepper.next();
                        }
                    }
                });
            }

            function getTap() {


                $.ajax({
                    url: "/api/users/usertap",
                    success: function (result) {

                        console.log(result);
                        $('#tapContainer').show();
                        $('#spinner').hide();
                        $('#preparing').hide();
                        $('#tap').text(result.tap);
                    }
                }).fail(function (response) {
                    console.log("TAP error")
                    console.log(response)

                    // TBD: error message
                    //$('#updateEmployeeAlert').show();
                    //$('#updateEmployeeAlertMessage').text(response.responseJSON.error);

                });
            }
        </script>
    }
}